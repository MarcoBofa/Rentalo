// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  surname   String?
  email     String   @unique
  image     String?  
  piva      String?
  birthDate String?
  role      String   @default("noleggiatore")
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt
  hashedPassword String? //optional for allowing social login

  // New fields for email verification
  email_verified             Boolean @default(false)
  emailVerificationToken    String? 

  // New fields for reset password functionality
  resetPasswordToken        String? 
  resetPasswordTokenExpiry  DateTime?

  // Existing relations
  accounts                  Account[]
  emailVerified             DateTime?
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model richiestaNoleggio {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  nome         String
  email        String   
  telefono     String  
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  macchinari   Macchinario[]
}

model Macchinario {
  id           String            @id @default(auto()) @map("_id") @db.ObjectId
  richiestaId  String            @map("richiesta_id") @db.ObjectId
  tipo         String
  regione      String
  descrizione  String
  richiesta    richiestaNoleggio @relation(fields: [richiestaId], references: [id])
}


